{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arthu\\\\OneDrive\\\\Desktop\\\\Important\\\\daser\\\\next\\\\test\\\\Components\\\\UI\\\\DatePicker\\\\index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport UseStyles from './styles';\nimport { UiGenerateMargin, UIGetMarginLeftRight } from 'utils/handlers';\nimport useDevice from 'hooks/use-media-device';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { isToday, isYesterday, isTomorrow, addDays, isPast } from 'date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { InputAdornment } from '@material-ui/core';\nimport { useDatePickerStyles, useLabelStyles, usePickerPaperStyles } from '../makeStylesUI';\nimport Actions from './elements/actions';\nimport variablesJSS from 'static/styles/jss/variables';\nconst canUseDOM = false;\nReact.useLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n\nconst convertDateToDays = date => {\n  if (isYesterday(date)) return 'Yesterday';\n  if (isToday(date)) return 'Today';\n  if (isTomorrow(date)) return 'Tomorrow';else return null;\n};\n\nconst DatePicker = props => {\n  const {\n    deviceType\n  } = useDevice();\n  const {\n    0: isMobile,\n    1: setIsMobile\n  } = useState(false);\n  const {\n    0: disablePrevBtn,\n    1: setDisablePrevBtn\n  } = useState(false);\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState({\n    changed: null,\n    selected: null\n  });\n  const {\n    0: datePickerOwnError,\n    1: setDatePickerOwnError\n  } = useState(null);\n  const {\n    0: marginBottom,\n    1: setMarginBottom\n  } = useState('0px');\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const parentRef = useRef();\n  const errorRef = useRef();\n  const bottomWrapRef = useRef();\n  const inputWrapperRef = useRef();\n  const styles = UseStyles(); // Get position of main Wrapper\n\n  const generateMarginDiv = useCallback(() => UiGenerateMargin(props.margin, props.direction), [props.direction, props.margin]);\n  const currentDate = useCallback(() => {\n    return selectedDate.selected || props.value || new Date();\n  }, [selectedDate, props.value]);\n  useEffect(() => {\n    if (selectedDate.selected) {\n      datePickerOwnError && setDatePickerOwnError(null);\n    }\n  }, [selectedDate.selected]);\n  const sharedPropsOfClasses = useMemo(() => {\n    const backgroundColor = props.theme === 'dark' ? variablesJSS.$input.$theme.$dark : variablesJSS.$input.$theme.$light;\n    const boxShadow = props.theme === 'dark' ? variablesJSS.$select.$dark.$borderColor + ' 0px 0px 0px 1px inset' : 'none';\n    return {\n      backgroundColor,\n      boxShadow,\n      marginBottom: marginBottom,\n      isDark: props.theme === 'dark',\n      valueColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$textColor : variablesJSS.$datepicker.$textColor,\n      actionsColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$actionsColor : variablesJSS.$datepicker.$actionsColor,\n      weekColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$weekColor : variablesJSS.$datepicker.$weekColor,\n      placeholderColor: props.theme === 'dark' ? variablesJSS.$select.$dark.$emptyTextColor : variablesJSS.$select.$emptyTextColor,\n      size: props.size,\n      isOpened: isOpen,\n      iconColor: props.theme === 'dark' ? variablesJSS.$input.$theme.$darkColor : '#000',\n      dayNearly: convertDateToDays(currentDate())\n    };\n  }, [isOpen, props.size, props.theme, currentDate, marginBottom, selectedDate, props.value]);\n  const classesDatePaper = usePickerPaperStyles(sharedPropsOfClasses);\n  const classesLabel = useLabelStyles(_objectSpread(_objectSpread({}, sharedPropsOfClasses), {}, {\n    color: props.label && props.label.color || '#fff'\n  }));\n  const classesDatePicker = useDatePickerStyles(sharedPropsOfClasses);\n  useEffect(() => {\n    // Detect if device is Mobile\n    if (deviceType === 'mobile') {\n      setIsMobile(true);\n    } else setIsMobile(false);\n  }, [deviceType]);\n  useEffect(() => {\n    // Calculate Margin Bottom\n    const bottomElementHeight = errorRef.current ? errorRef.current.offsetHeight + 2 : bottomWrapRef.current ? bottomWrapRef.current.offsetHeight + 2 : 0;\n    setMarginBottom(bottomElementHeight\n    /*marginTopBottom*/\n    + 'px');\n  }, [props.required, props.errors, errorRef.current, props.helperText, bottomWrapRef.current, datePickerOwnError]);\n  useEffect(() => {\n    // Disable the prev/next buttons\n    const date = currentDate();\n\n    if (isToday(date) || isPast(date) && props.shouldDisablePastDate) {\n      setDisablePrevBtn(true);\n    } else setDisablePrevBtn(false);\n  }, [selectedDate, currentDate, props.value, props.shouldDisablePastDate]);\n\n  const handleDateChange = date => {\n    setSelectedDate({\n      selected: selectedDate.selected,\n      changed: date\n    });\n  };\n\n  const inlineStylesParent = useMemo(() => {\n    // Set inline styles on the main Wrapper\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, generateMarginDiv()), {}, {\n      width: props.fullWidth ? `calc(100% - ${UIGetMarginLeftRight(props.margin)}px)` : props.width\n    }, props.label && {\n      display: 'flex',\n      flexDirection: 'column'\n    }), !props.label && {\n      display: 'block'\n    }), props.customStylesDiv);\n  }, [props.customStylesDiv, props.label, props.fullWidth, props.direction, props.width, props.margin]);\n\n  const setBottomActions = container => {\n    // The DatePicker doesn't have cancel or ok button for mobile that is why we should make by custom\n    const cancelPicker = () => {\n      setIsOpen(false);\n    };\n\n    const selectPicker = () => {\n      if (!selectedDate.changed) {\n        setSelectedDate({\n          selected: props.value || new Date(),\n          changed: null\n        });\n      } else {\n        setSelectedDate({\n          selected: selectedDate.changed,\n          changed: selectedDate.changed\n        });\n      }\n\n      setIsOpen(false);\n    };\n\n    if (isOpen && container) {\n      const actionsWrap = document.createElement('DIV');\n      actionsWrap.className = 'datepicker-actions-wrap';\n      container.appendChild(actionsWrap);\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(Actions, {\n        onClick: () => cancelPicker(),\n        onSelect: () => selectPicker()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), container.querySelector('.datepicker-actions-wrap'));\n    }\n  };\n\n  const generateClassNameParent = useMemo(() => {\n    return `${styles[props.theme ? 'theme-' + props.theme : '']} ${'wrapper-' + props.size} ${styles['input-wrap']} ${props.errors ? 'error-field' : ''}`;\n  }, [props.errors, props.theme, props.size]);\n  const arrows = useMemo(() => {\n    const changeDirection = dir => {\n      const date = addDays(currentDate(), dir === 'prev' ? -1 : 1);\n      if (!isToday(date) && isPast(date) && props.shouldDisablePastDate && dir !== 'next') return;\n      setSelectedDate({\n        selected: date,\n        changed: date\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'arrows-slide-datepicker',\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        onClick: () => changeDirection('prev'),\n        className: `left-icon ${disablePrevBtn ? 'disable-btn' : ''}`,\n        focusable: \"false\",\n        viewBox: \"0 0 24 24\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7 10l5 5 5-5z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        onClick: () => changeDirection('next'),\n        className: 'right-icon',\n        focusable: \"false\",\n        viewBox: \"0 0 24 24\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7 10l5 5 5-5z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }, [currentDate, disablePrevBtn, selectedDate.selected, props.value, props.options]);\n  const bottomWrap = useMemo(() => {\n    if ((props.helperText || props.required) && !props.errors && !datePickerOwnError) {\n      const text = props.helperText || (props.required ? 'Required *' : '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['bottom-wrap'],\n        ref: bottomWrapRef,\n        children: text && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helper-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this);\n    } else if (props.errors || datePickerOwnError) return /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: errorRef,\n      className: styles['error-line'],\n      children: props.errors || datePickerOwnError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this);\n  }, [props.helperText, props.errors, errorRef, datePickerOwnError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: inlineStylesParent,\n    className: generateClassNameParent,\n    ref: parentRef,\n    children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: inputWrapperRef,\n        className: 'input-element-wrapper',\n        style: props.customStylesInput,\n        children: [/*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          InputAdornmentProps: {\n            position: \"start\"\n          },\n          keyboardIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'icon-calendar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 39\n          }, this),\n          classes: classesDatePicker,\n          onError: err => err && setDatePickerOwnError(err),\n          InputLabelProps: {\n            disableAnimation: true,\n            variant: 'filled',\n            focused: false,\n            shrink: true,\n            classes: classesLabel\n          },\n          placeholder: props.format,\n          disableToolbar: true,\n          KeyboardButtonProps: {\n            onFocus: e => {\n              setIsOpen(true);\n            },\n            'aria-label': 'change date'\n          },\n          PopoverProps: {\n            key: selectedDate.changed,\n            anchorOrigin: {\n              vertical: \"bottom\",\n              horizontal: \"left\"\n            },\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"left\"\n            },\n            getContentAnchorEl: null,\n            classes: classesDatePaper,\n            className: isMobile ? 'mobile-mode_datePicker' : '',\n            disableRestoreFocus: true,\n            onEnter: e => setBottomActions(e),\n            onClose: () => {\n              setIsOpen(false);\n            }\n          },\n          InputProps: {\n            endAdornment: props.slideByArrows ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: arrows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 66\n            }, this) : null,\n            onFocus: () => {\n              setIsOpen(true);\n            }\n          },\n          disablePast: props.shouldDisablePastDate,\n          fullWidth: true,\n          disabled: props.disabled,\n          open: isOpen,\n          inputVariant: \"filled\",\n          variant: 'inline',\n          format: props.format,\n          margin: \"normal\",\n          label: props.label && props.label.title + (props.required ? ' *' : ''),\n          value: currentDate(),\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), bottomWrap]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n};\n\nDatePicker.defaultProps = {\n  size: 'md',\n  type: 'text',\n  fullWidth: false,\n  margin: 0,\n  required: false,\n  theme: 'light',\n  customStylesInput: {},\n  customStylesDiv: {},\n  format: 'MM/dd/yyyy',\n  width: 310,\n  shouldDisablePastDate: true,\n  slideByArrows: false\n};\nDatePicker.propTypes = {\n  format: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  slideByArrows: PropTypes.bool,\n  theme: PropTypes.string,\n  helperText: PropTypes.string,\n  direction: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  size: PropTypes.string,\n  refBind: PropTypes.any,\n  label: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  errors: PropTypes.string,\n  change: PropTypes.func,\n  customStylesDiv: PropTypes.object,\n  customStylesInput: PropTypes.object,\n  shouldDisablePastDate: PropTypes.bool,\n  margin: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nexport default /*#__PURE__*/React.memo(DatePicker);","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/test/Components/UI/DatePicker/index.jsx"],"names":["React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","ReactDOM","PropTypes","UseStyles","UiGenerateMargin","UIGetMarginLeftRight","useDevice","DateFnsUtils","isToday","isYesterday","isTomorrow","addDays","isPast","MuiPickersUtilsProvider","KeyboardDatePicker","InputAdornment","useDatePickerStyles","useLabelStyles","usePickerPaperStyles","Actions","variablesJSS","canUseDOM","convertDateToDays","date","DatePicker","props","deviceType","isMobile","setIsMobile","disablePrevBtn","setDisablePrevBtn","selectedDate","setSelectedDate","changed","selected","datePickerOwnError","setDatePickerOwnError","marginBottom","setMarginBottom","isOpen","setIsOpen","parentRef","errorRef","bottomWrapRef","inputWrapperRef","styles","generateMarginDiv","margin","direction","currentDate","value","Date","sharedPropsOfClasses","backgroundColor","theme","$input","$theme","$dark","$light","boxShadow","$select","$borderColor","isDark","valueColor","$datepicker","$textColor","actionsColor","$actionsColor","weekColor","$weekColor","placeholderColor","$emptyTextColor","size","isOpened","iconColor","$darkColor","dayNearly","classesDatePaper","classesLabel","color","label","classesDatePicker","bottomElementHeight","current","offsetHeight","required","errors","helperText","shouldDisablePastDate","handleDateChange","inlineStylesParent","width","fullWidth","display","flexDirection","customStylesDiv","setBottomActions","container","cancelPicker","selectPicker","actionsWrap","document","createElement","className","appendChild","render","querySelector","generateClassNameParent","arrows","changeDirection","dir","options","bottomWrap","text","customStylesInput","position","err","disableAnimation","variant","focused","shrink","classes","format","onFocus","e","key","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","disableRestoreFocus","onEnter","onClose","endAdornment","slideByArrows","disabled","title","defaultProps","type","propTypes","string","bool","refBind","any","object","oneOfType","number","change","func","array","memo"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types';\r\nimport UseStyles from './styles';\r\nimport {UiGenerateMargin, UIGetMarginLeftRight} from 'utils/handlers';\r\nimport useDevice from 'hooks/use-media-device';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {isToday, isYesterday, isTomorrow, addDays, isPast} from 'date-fns'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {InputAdornment} from '@material-ui/core';\r\nimport {\r\n    useDatePickerStyles,\r\n    useLabelStyles,\r\n    usePickerPaperStyles,\r\n} from '../makeStylesUI';\r\nimport Actions from './elements/actions';\r\nimport variablesJSS from 'static/styles/jss/variables';\r\nconst canUseDOM = (typeof window !== 'undefined');\r\nReact.useLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\r\n\r\nconst convertDateToDays = (date) => {\r\n    if (isYesterday(date)) return 'Yesterday';\r\n    if (isToday(date)) return 'Today';\r\n    if (isTomorrow(date)) return 'Tomorrow';\r\n    else return null\r\n}\r\n\r\nconst DatePicker = (props) => {\r\n    const {deviceType} = useDevice();\r\n    const [isMobile, setIsMobile] = useState(false);\r\n    const [disablePrevBtn, setDisablePrevBtn] = useState(false);\r\n    const [selectedDate, setSelectedDate] = useState({\r\n        changed: null,\r\n        selected: null,\r\n    });\r\n    const [datePickerOwnError, setDatePickerOwnError] = useState(null);\r\n    const [marginBottom, setMarginBottom] = useState('0px');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const parentRef = useRef();\r\n    const errorRef = useRef();\r\n    const bottomWrapRef = useRef();\r\n    const inputWrapperRef = useRef();\r\n    const styles = UseStyles();\r\n\r\n    // Get position of main Wrapper\r\n    const generateMarginDiv = useCallback(() => UiGenerateMargin(props.margin, props.direction), [props.direction, props.margin]);\r\n\r\n    const currentDate = useCallback(() => {\r\n        return selectedDate.selected || props.value || new Date()\r\n    }, [selectedDate, props.value])\r\n\r\n    useEffect(() => {\r\n        if (selectedDate.selected) {\r\n             datePickerOwnError && setDatePickerOwnError(null);\r\n        }\r\n    }, [selectedDate.selected]);\r\n\r\n    const sharedPropsOfClasses = useMemo(() => {\r\n        const backgroundColor = props.theme === 'dark' ? variablesJSS.$input.$theme.$dark : variablesJSS.$input.$theme.$light;\r\n        const boxShadow = props.theme === 'dark' ? variablesJSS.$select.$dark.$borderColor + ' 0px 0px 0px 1px inset' : 'none';\r\n        return {\r\n            backgroundColor,\r\n            boxShadow,\r\n            marginBottom: marginBottom,\r\n            isDark: props.theme === 'dark',\r\n            valueColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$textColor : variablesJSS.$datepicker.$textColor,\r\n            actionsColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$actionsColor : variablesJSS.$datepicker.$actionsColor,\r\n            weekColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$weekColor : variablesJSS.$datepicker.$weekColor,\r\n            placeholderColor: props.theme === 'dark' ? variablesJSS.$select.$dark.$emptyTextColor : variablesJSS.$select.$emptyTextColor,\r\n            size: props.size,\r\n            isOpened: isOpen,\r\n            iconColor: props.theme === 'dark' ? variablesJSS.$input.$theme.$darkColor : '#000',\r\n            dayNearly: convertDateToDays(currentDate()),\r\n        }\r\n    }, [isOpen, props.size, props.theme, currentDate, marginBottom, selectedDate, props.value]);\r\n\r\n    const classesDatePaper = usePickerPaperStyles(sharedPropsOfClasses);\r\n\r\n    const classesLabel = useLabelStyles({\r\n        ...sharedPropsOfClasses,\r\n        color: (props.label && props.label.color) || '#fff',\r\n    });\r\n\r\n    const classesDatePicker = useDatePickerStyles(sharedPropsOfClasses);\r\n\r\n    useEffect(() => { // Detect if device is Mobile\r\n        if (deviceType === 'mobile') {\r\n            setIsMobile(true)\r\n        } else setIsMobile(false)\r\n    }, [deviceType])\r\n\r\n\r\n    useEffect(() => { // Calculate Margin Bottom\r\n        const bottomElementHeight = errorRef.current ? errorRef.current.offsetHeight + 2 :\r\n            bottomWrapRef.current ? bottomWrapRef.current.offsetHeight + 2 : 0;\r\n        setMarginBottom(bottomElementHeight /*marginTopBottom*/ + 'px');\r\n    }, [props.required, props.errors, errorRef.current, props.helperText, bottomWrapRef.current, datePickerOwnError]);\r\n\r\n    useEffect(() => { // Disable the prev/next buttons\r\n        const date = currentDate();\r\n        if (isToday(date) || isPast(date) && props.shouldDisablePastDate) {\r\n            setDisablePrevBtn(true)\r\n        } else setDisablePrevBtn(false);\r\n    }, [selectedDate, currentDate, props.value, props.shouldDisablePastDate])\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate({\r\n            selected: selectedDate.selected,\r\n            changed: date,\r\n        })\r\n    };\r\n\r\n    const inlineStylesParent = useMemo(() => { // Set inline styles on the main Wrapper\r\n        return {\r\n            ...generateMarginDiv(),\r\n            width: props.fullWidth ? `calc(100% - ${UIGetMarginLeftRight(props.margin)}px)` : props.width,\r\n            ...(props.label && {\r\n                display: 'flex',\r\n                flexDirection: 'column'\r\n            }),\r\n            ...(!props.label && {\r\n                display: 'block',\r\n            }),\r\n            ...props.customStylesDiv\r\n        }\r\n    }, [\r\n        props.customStylesDiv,\r\n        props.label,\r\n        props.fullWidth,\r\n        props.direction,\r\n        props.width,\r\n        props.margin]);\r\n\r\n    const setBottomActions = (container) => { // The DatePicker doesn't have cancel or ok button for mobile that is why we should make by custom\r\n        const cancelPicker = () => {\r\n            setIsOpen(false);\r\n        }\r\n        const selectPicker = () => {\r\n            if (!selectedDate.changed) {\r\n                setSelectedDate({\r\n                    selected: props.value || new Date(),\r\n                    changed: null,\r\n                })\r\n            } else {\r\n                setSelectedDate({\r\n                    selected: selectedDate.changed,\r\n                    changed: selectedDate.changed,\r\n                })\r\n            }\r\n            setIsOpen(false);\r\n        }\r\n        if (isOpen && container) {\r\n            const actionsWrap = document.createElement('DIV');\r\n            actionsWrap.className = 'datepicker-actions-wrap';\r\n            container.appendChild(actionsWrap);\r\n            ReactDOM.render(\r\n                <Actions\r\n                    onClick={() => cancelPicker()}\r\n                    onSelect={() => selectPicker()}/>,\r\n                container.querySelector('.datepicker-actions-wrap'));\r\n        }\r\n    }\r\n\r\n    const generateClassNameParent = useMemo(() => {\r\n        return `${styles[props.theme ? 'theme-' + props.theme : '']} ${'wrapper-' + props.size} ${styles['input-wrap']} ${props.errors ? 'error-field' : ''}`\r\n    }, [props.errors, props.theme, props.size]);\r\n\r\n    const arrows = useMemo(() => {\r\n        const changeDirection = (dir) => {\r\n            const date = addDays(currentDate(), dir === 'prev' ? -1 : 1);\r\n            if (!isToday(date) && isPast(date) && props.shouldDisablePastDate && dir !== 'next') return;\r\n            setSelectedDate({\r\n                selected: date,\r\n                changed: date,\r\n            })\r\n        };\r\n        return (\r\n            <div className={'arrows-slide-datepicker'}>\r\n                <svg onClick={() => changeDirection('prev')} className={`left-icon ${disablePrevBtn ? 'disable-btn' : ''}`} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M7 10l5 5 5-5z\"></path>\r\n                </svg>\r\n                <svg onClick={() => changeDirection('next')} className={'right-icon'} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M7 10l5 5 5-5z\"></path>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }, [currentDate, disablePrevBtn, selectedDate.selected, props.value, props.options])\r\n\r\n    const bottomWrap = useMemo(() => {\r\n        if ((props.helperText || props.required) && !props.errors && !datePickerOwnError) {\r\n            const text = props.helperText || (props.required ? 'Required *' : '');\r\n            return (\r\n                <div className={styles['bottom-wrap']} ref={bottomWrapRef}>\r\n                    {text && <p className=\"helper-text\">{text}</p>}\r\n                </div>\r\n            )\r\n        } else if (props.errors || datePickerOwnError) return (\r\n            <span ref={errorRef} className={styles['error-line']}>{props.errors || datePickerOwnError}</span>\r\n        )\r\n    }, [props.helperText, props.errors, errorRef, datePickerOwnError]);\r\n\r\n    return (\r\n        <div style={inlineStylesParent}\r\n             className={generateClassNameParent}\r\n             ref={parentRef}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <div ref={inputWrapperRef} className={'input-element-wrapper'} style={props.customStylesInput}>\r\n                    <KeyboardDatePicker\r\n                        InputAdornmentProps={{ position: \"start\" }}\r\n                        keyboardIcon={<span className={'icon-calendar'}></span>}\r\n                        classes={classesDatePicker}\r\n                        onError={(err) => err && setDatePickerOwnError(err)}\r\n                        InputLabelProps={{\r\n                            disableAnimation: true,\r\n                            variant: 'filled',\r\n                            focused: false,\r\n                            shrink: true,\r\n                            classes: classesLabel\r\n                        }}\r\n                        placeholder={props.format}\r\n                        disableToolbar\r\n                        KeyboardButtonProps={{\r\n                            onFocus: e => {\r\n                                setIsOpen(true);\r\n                            },\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                        PopoverProps={{\r\n                            key: selectedDate.changed,\r\n                            anchorOrigin: {\r\n                                vertical: \"bottom\",\r\n                                horizontal: \"left\"\r\n                            },\r\n                            transformOrigin: {\r\n                                vertical: \"top\",\r\n                                horizontal: \"left\"\r\n                            },\r\n                            getContentAnchorEl: null,\r\n                            classes: classesDatePaper,\r\n                            className: isMobile ? 'mobile-mode_datePicker' : '',\r\n                            disableRestoreFocus: true,\r\n                            onEnter: (e) => setBottomActions(e),\r\n                            onClose: () => {\r\n                                setIsOpen(false);\r\n                            }\r\n                        }}\r\n                        InputProps={{\r\n                            endAdornment: (props.slideByArrows ? <InputAdornment position=\"end\">\r\n                                {arrows}\r\n                            </InputAdornment> : null),\r\n                            onFocus: () => {\r\n                                setIsOpen(true);\r\n                            }\r\n                        }}\r\n                        disablePast={props.shouldDisablePastDate}\r\n                        fullWidth\r\n                        disabled={props.disabled}\r\n                        open={isOpen}\r\n                        inputVariant=\"filled\"\r\n                        variant={'inline'}\r\n                        format={props.format}\r\n                        margin=\"normal\"\r\n                        label={props.label && props.label.title + (props.required ? ' *' : '')}\r\n                        value={currentDate()}\r\n                        onChange={handleDateChange}\r\n                    />\r\n                    {bottomWrap}\r\n                </div>\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\nDatePicker.defaultProps = {\r\n    size: 'md',\r\n    type: 'text',\r\n    fullWidth: false,\r\n    margin: 0,\r\n    required: false,\r\n    theme: 'light',\r\n    customStylesInput: {},\r\n    customStylesDiv: {},\r\n    format: 'MM/dd/yyyy',\r\n    width: 310,\r\n    shouldDisablePastDate: true,\r\n    slideByArrows: false,\r\n};\r\nDatePicker.propTypes = {\r\n    format: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    slideByArrows: PropTypes.bool,\r\n    theme: PropTypes.string,\r\n    helperText: PropTypes.string,\r\n    direction: PropTypes.string,\r\n    fullWidth: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    refBind: PropTypes.any,\r\n    label: PropTypes.object,\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    errors: PropTypes.string,\r\n    change: PropTypes.func,\r\n    customStylesDiv: PropTypes.object,\r\n    customStylesInput: PropTypes.object,\r\n    shouldDisablePastDate: PropTypes.bool,\r\n    margin: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.object,\r\n    ]),\r\n};\r\nexport default React.memo(DatePicker);"]},"metadata":{},"sourceType":"module"}