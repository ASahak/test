{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arthu\\\\OneDrive\\\\Desktop\\\\Important\\\\daser\\\\next\\\\test\\\\Components\\\\UI\\\\Button\\\\index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useLayoutEffect, useRef, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport UseStyles from './styles';\nimport { UiGenerateMargin, UIGetMarginLeftRight } from 'utils/handlers';\nconst canUseDOM = false;\nReact.useLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n\nconst Button = props => {\n  const buttonRef = useRef();\n  const styles = UseStyles();\n  useEffect(() => {\n    if (props.attr && buttonRef.current) {\n      Object.keys(props.attr).map(name => {\n        buttonRef.current.setAttribute(name, props.attr[name]);\n      });\n    }\n  }, [props.attr]); // Get position of main Wrapper\n\n  const generateMarginDiv = useCallback(() => UiGenerateMargin(props.margin, props.direction), [props.direction, props.margin]);\n  const inlineStyles = useMemo(() => {\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n      border: props.border,\n      background: props.background,\n      color: props.color,\n      fontSize: props.fontSize + 'px'\n    }, !props.fullWidth && props.width && {\n      width: props.width + 'px'\n    }), props.fullWidth && {\n      width: `calc(100% - ${UIGetMarginLeftRight(props.margin)}px)`,\n      display: 'flex'\n    }), generateMarginDiv()), props.customStyles);\n  }, [props.direction, props.margin, props.border, props.color, props.fontSize, props.fullWidth, props.width, props.customStyles, props.background]);\n  const icon = useMemo(() => {\n    if (props.icon && props.icon.loading) return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: 'loading-icon'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 54\n    }, this);\n    if (props.icon && !props.icon.hasOwnProperty('loading')) return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: props.icon.className\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 73\n    }, this);\n  }, [props.icon]);\n  const generateClassName = useMemo(() => {\n    return `${props.icon ? 'custom-icon-dir-' + (props.icon.direction || 'right') : ''} ${styles['btn-global']} ${styles['btn-' + props.size]} ${props.hover || ''} ${styles['btn-' + props.typeButton]} ${props.className}`;\n  }, [props.icon, props.size, props.hover, props.typeButton, props.className]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: props.refBind || buttonRef,\n    className: generateClassName,\n    style: inlineStyles,\n    onClick: props.onClick,\n    type: props.type,\n    disabled: props.disabled,\n    children: [props.text, icon]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nButton.defaultProps = {\n  size: 'md',\n  type: 'button',\n  fullWidth: false,\n  fontSize: 13,\n  margin: 0,\n  disabled: false,\n  customStyles: {},\n  typeButton: 'default',\n  className: ''\n};\nButton.propTypes = {\n  className: PropTypes.string,\n  typeButton: PropTypes.string,\n  direction: PropTypes.string,\n  attr: PropTypes.object,\n  icon: PropTypes.object,\n  disabled: PropTypes.bool,\n  background: PropTypes.string,\n  border: PropTypes.string,\n  hover: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  size: PropTypes.string,\n  type: PropTypes.string,\n  width: PropTypes.number,\n  fontSize: PropTypes.number,\n  margin: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  text: PropTypes.string,\n  customStyles: PropTypes.object,\n  refBind: PropTypes.object,\n  onClick: PropTypes.func\n};\nexport default /*#__PURE__*/React.memo(Button);","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/test/Components/UI/Button/index.jsx"],"names":["React","useEffect","useLayoutEffect","useRef","useCallback","useMemo","PropTypes","UseStyles","UiGenerateMargin","UIGetMarginLeftRight","canUseDOM","Button","props","buttonRef","styles","attr","current","Object","keys","map","name","setAttribute","generateMarginDiv","margin","direction","inlineStyles","border","background","color","fontSize","fullWidth","width","display","customStyles","icon","loading","hasOwnProperty","className","generateClassName","size","hover","typeButton","refBind","onClick","type","disabled","text","defaultProps","propTypes","string","object","bool","number","oneOfType","array","func","memo"],"mappings":"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","sourcesContent":["import React, {useEffect, useLayoutEffect, useRef, useCallback, useMemo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UseStyles from './styles';\r\nimport {UiGenerateMargin, UIGetMarginLeftRight} from 'utils/handlers';\r\nconst canUseDOM = (typeof window !== 'undefined');\r\nReact.useLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\r\n\r\nconst Button = (props) => {\r\n    const buttonRef = useRef();\r\n    const styles = UseStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.attr && buttonRef.current) {\r\n            Object.keys(props.attr).map(name => {\r\n                buttonRef.current.setAttribute(name, props.attr[name])\r\n            })\r\n        }\r\n    }, [props.attr]);\r\n\r\n    // Get position of main Wrapper\r\n    const generateMarginDiv = useCallback(() => UiGenerateMargin(props.margin, props.direction), [props.direction, props.margin]);\r\n\r\n    const inlineStyles = useMemo(() => {\r\n        return {\r\n            border: props.border,\r\n            background: props.background,\r\n            color: props.color,\r\n            fontSize: props.fontSize + 'px',\r\n            ...((!props.fullWidth && props.width) && {width: props.width + 'px'}),\r\n            ...(props.fullWidth && {width: `calc(100% - ${UIGetMarginLeftRight(props.margin)}px)`, display: 'flex'}),\r\n            ...generateMarginDiv(),\r\n            ...props.customStyles,\r\n        }\r\n    }, [\r\n        props.direction,\r\n        props.margin,\r\n        props.border,\r\n        props.color,\r\n        props.fontSize,\r\n        props.fullWidth,\r\n        props.width,\r\n        props.customStyles,\r\n        props.background,\r\n    ]);\r\n\r\n    const icon = useMemo(() => {\r\n        if (props.icon && props.icon.loading) return <i className={'loading-icon'}></i>\r\n        if (props.icon && !props.icon.hasOwnProperty('loading')) return <i className={props.icon.className}></i>\r\n    }, [props.icon])\r\n\r\n    const generateClassName = useMemo(() => {\r\n        return `${props.icon ? 'custom-icon-dir-' + (props.icon.direction || 'right') : ''} ${styles['btn-global']} ${styles['btn-' + props.size]} ${props.hover || ''} ${styles['btn-' + props.typeButton]} ${props.className}`\r\n    }, [props.icon, props.size, props.hover, props.typeButton, props.className]);\r\n\r\n    return (\r\n        <button\r\n            ref={props.refBind || buttonRef}\r\n            className={generateClassName}\r\n            style={inlineStyles}\r\n            onClick={props.onClick}\r\n            type={props.type}\r\n            disabled={props.disabled}>\r\n            {props.text}\r\n            {icon}\r\n        </button>\r\n    )\r\n};\r\nButton.defaultProps = {\r\n    size: 'md',\r\n    type: 'button',\r\n    fullWidth: false,\r\n    fontSize: 13,\r\n    margin: 0,\r\n    disabled: false,\r\n    customStyles: {},\r\n    typeButton: 'default',\r\n    className: '',\r\n};\r\nButton.propTypes = {\r\n    className: PropTypes.string,\r\n    typeButton: PropTypes.string,\r\n    direction: PropTypes.string,\r\n    attr: PropTypes.object,\r\n    icon: PropTypes.object,\r\n    disabled: PropTypes.bool,\r\n    background: PropTypes.string,\r\n    border: PropTypes.string,\r\n    hover: PropTypes.string,\r\n    fullWidth: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    type: PropTypes.string,\r\n    width: PropTypes.number,\r\n    fontSize: PropTypes.number,\r\n    margin: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n    text: PropTypes.string,\r\n    customStyles: PropTypes.object,\r\n    refBind: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\nexport default React.memo(Button);\r\n"]},"metadata":{},"sourceType":"module"}