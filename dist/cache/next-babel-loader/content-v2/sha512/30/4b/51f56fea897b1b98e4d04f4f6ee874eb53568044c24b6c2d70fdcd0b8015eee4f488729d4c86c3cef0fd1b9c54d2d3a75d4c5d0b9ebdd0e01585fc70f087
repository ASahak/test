{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arthu\\\\OneDrive\\\\Desktop\\\\Important\\\\daser\\\\next\\\\test\\\\Components\\\\UI\\\\InputRange\\\\index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport UseStyles from './styles';\nimport Slider from '@material-ui/core/Slider';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useFormControlStyles, useLabelStyles, useRangeSliderStyles } from \"../makeStylesUI\";\nimport { UiGenerateMargin, UIGetMarginLeftRight } from 'utils/handlers';\n\nconst InputRange = props => {\n  const {\n    0: marginBottom,\n    1: setMarginBottom\n  } = useState('0px');\n  const defaultValue = props.value.length === 1 ? props.value[0] : props.value;\n  const {\n    0: value,\n    1: setValue\n  } = useState(defaultValue);\n  const styles = UseStyles();\n  const errorRef = useRef();\n  const bottomWrapRef = useRef();\n\n  const handleChange = (event, newValue) => {\n    let value = typeof newValue === 'number' ? [newValue] : newValue;\n    const maxIndex = value.length;\n\n    if (maxIndex === 1) {\n      if (props.min && newValue <= props.min) {\n        newValue = props.min;\n      } else if (props.max && newValue >= props.max) {\n        newValue = props.max;\n      }\n    } else {\n      if (props.min && newValue[0] <= props.min) {\n        newValue[0] = props.min;\n      }\n\n      if (props.max && newValue[1] >= props.max) {\n        newValue[1] = props.max;\n      }\n    }\n\n    setValue(newValue);\n  };\n\n  const resetSlider = () => {\n    setValue(defaultValue);\n  }; // Get position of main Wrapper\n\n\n  const generateMarginDiv = useCallback(() => UiGenerateMargin(props.margin, props.direction), [props.direction, props.margin]);\n  const convertNaturalSize = useCallback((prop, what) => {\n    if (isNaN(+prop)) return prop;else return prop + what;\n  }, [props.width]);\n  const sharedPropsOfClasses = useMemo(() => {\n    return {\n      marginBottom: marginBottom,\n      size: props.size\n    };\n  }, [props.size, marginBottom, props.value]);\n  const LabelProps = useMemo(() => _objectSpread({\n    disableAnimation: true,\n    variant: 'filled',\n    focused: false,\n    shrink: false\n  }, props.error && {\n    error: props.error\n  }), [props]);\n  const topActions = useMemo(() => {\n    let rangeValue;\n\n    const _value = typeof value === 'number' ? [value] : value;\n\n    if (_value[0] >= 0 && !_value[1]) rangeValue = _value[0] === 0 ? '...' : _value[0] + ' ' + props.sizeOption;else rangeValue = _value[0] === 0 && _value[1] === 0 ? '...' : _value[0] + ' ' + props.sizeOption + ' - ' + _value[1] + ' ' + props.sizeOption;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['value-badge-wrapper'],\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value-badge\",\n        children: rangeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), _value.some(e => e > 0) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"reset-icon icon-bin\",\n        onClick: resetSlider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }, [value]);\n  const bottomWrap = useMemo(() => {\n    if ((props.helperText || props.required) && !props.errors) {\n      const text = props.helperText || (props.required ? 'Required *' : '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['bottom-wrap'],\n        ref: bottomWrapRef,\n        children: text && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helper-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n    } else if (props.errors) return /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: errorRef,\n      className: styles['error-line'],\n      children: props.errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }, [props.helperText, props.errors, errorRef]);\n  const classesRangeSlider = useRangeSliderStyles(_objectSpread({}, sharedPropsOfClasses));\n  const classesFormControl = useFormControlStyles(_objectSpread(_objectSpread({}, sharedPropsOfClasses), {}, {\n    width: props.fullWidth ? `calc(100% - ${UIGetMarginLeftRight(props.margin)}px)` : convertNaturalSize(props.width, 'px'),\n    size: props.size\n  }));\n  const classesLabel = useLabelStyles(_objectSpread(_objectSpread({}, sharedPropsOfClasses), {}, {\n    color: props.label && props.label.color || '#fff'\n  }));\n  useEffect(() => {\n    // Calculate Margin Bottom\n    const bottomElementHeight = errorRef.current ? errorRef.current.offsetHeight + 2 : bottomWrapRef.current ? bottomWrapRef.current.offsetHeight + 2 : 0;\n    setMarginBottom(bottomElementHeight\n    /*marginTopBottom*/\n    + 'px');\n  }, [props.required, props.errors, errorRef.current, props.helperText, bottomWrapRef.current]);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    classes: {\n      root: classesFormControl.root\n    },\n    style: _objectSpread({}, generateMarginDiv()),\n    children: [props.label && /*#__PURE__*/_jsxDEV(InputLabel, _objectSpread(_objectSpread({\n      classes: classesLabel\n    }, LabelProps), {}, {\n      children: props.label.title + (props.required ? ' *' : '')\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles['input-slider']}`,\n      \"data-disabled\": props.disabled,\n      children: [/*#__PURE__*/_jsxDEV(Slider, {\n        disabled: props.disabled,\n        classes: classesRangeSlider,\n        value: value,\n        defaultValue: defaultValue,\n        onChange: handleChange,\n        valueLabelDisplay: \"off\",\n        \"aria-labelledby\": \"range-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), topActions, bottomWrap]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\nInputRange.defaultProps = {\n  size: 'md',\n  fullWidth: false,\n  margin: 0,\n  required: false,\n  min: 0,\n  max: 100,\n  value: [0]\n};\nInputRange.propTypes = {\n  sizeOption: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  size: PropTypes.string,\n  min: props => {\n    if (typeof props.min === 'number') {\n      if (props.value.some(e => e < props.min)) throw new Error('Minimum value can\\'t be smaller than value');\n    } else throw new Error('Minimum value must be Number');\n  },\n  max: PropTypes.number,\n  change: PropTypes.func,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  errors: PropTypes.string,\n  label: PropTypes.object,\n  helperText: PropTypes.string,\n  direction: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  margin: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  value: PropTypes.array\n};\nexport default /*#__PURE__*/React.memo(InputRange);","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/test/Components/UI/InputRange/index.jsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","PropTypes","UseStyles","Slider","InputLabel","FormControl","useFormControlStyles","useLabelStyles","useRangeSliderStyles","UiGenerateMargin","UIGetMarginLeftRight","InputRange","props","marginBottom","setMarginBottom","defaultValue","value","length","setValue","styles","errorRef","bottomWrapRef","handleChange","event","newValue","maxIndex","min","max","resetSlider","generateMarginDiv","margin","direction","convertNaturalSize","prop","what","isNaN","width","sharedPropsOfClasses","size","LabelProps","disableAnimation","variant","focused","shrink","error","topActions","rangeValue","_value","sizeOption","some","e","bottomWrap","helperText","required","errors","text","classesRangeSlider","classesFormControl","fullWidth","classesLabel","color","label","bottomElementHeight","current","offsetHeight","root","title","disabled","defaultProps","propTypes","string","bool","Error","number","change","func","oneOfType","object","array","memo"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UseStyles from './styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {useFormControlStyles, useLabelStyles, useRangeSliderStyles} from \"../makeStylesUI\";\r\nimport {UiGenerateMargin, UIGetMarginLeftRight} from 'utils/handlers';\r\n\r\nconst InputRange = (props) => {\r\n    const [marginBottom, setMarginBottom] = useState('0px');\r\n    const defaultValue = props.value.length === 1 ? props.value[0] : props.value;\r\n    const [value, setValue] = useState(defaultValue);\r\n    const styles = UseStyles();\r\n\r\n    const errorRef = useRef();\r\n    const bottomWrapRef = useRef();\r\n\r\n    const handleChange = (event, newValue) => {\r\n        let value = typeof newValue === 'number' ? [newValue] : newValue;\r\n        const maxIndex = value.length;\r\n        if (maxIndex === 1) {\r\n            if (props.min && newValue <= props.min) {\r\n                newValue = props.min;\r\n            } else if (props.max && newValue >= props.max) {\r\n                newValue = props.max;\r\n            }\r\n        } else {\r\n            if (props.min && newValue[0] <= props.min) {\r\n                newValue[0] = props.min;\r\n            }\r\n            if (props.max && newValue[1] >= props.max) {\r\n                newValue[1] = props.max;\r\n            }\r\n        }\r\n        setValue(newValue);\r\n    };\r\n\r\n    const resetSlider = () => {\r\n        setValue(defaultValue);\r\n    }\r\n\r\n    // Get position of main Wrapper\r\n    const generateMarginDiv = useCallback(() => UiGenerateMargin(props.margin, props.direction), [props.direction, props.margin]);\r\n\r\n    const convertNaturalSize = useCallback((prop, what) => {\r\n        if (isNaN(+prop)) return prop;\r\n        else return prop + what;\r\n    }, [props.width]);\r\n\r\n    const sharedPropsOfClasses = useMemo(() => {\r\n        return {\r\n            marginBottom: marginBottom,\r\n            size: props.size,\r\n        }\r\n    }, [props.size, marginBottom, props.value]);\r\n\r\n    const LabelProps = useMemo(() => ({\r\n        disableAnimation: true,\r\n        variant: 'filled',\r\n        focused: false,\r\n        shrink: false,\r\n        ...(props.error && {error: props.error})\r\n    }), [props]);\r\n\r\n    const topActions = useMemo(() => {\r\n        let rangeValue;\r\n        const _value = typeof value === 'number' ? [value] : value;\r\n        if (_value[0] >= 0 && !_value[1]) rangeValue = _value[0] === 0 ? '...' : _value[0] + ' ' + props.sizeOption\r\n        else rangeValue = (_value[0] === 0 && _value[1] === 0) ? '...' : _value[0] + ' ' + props.sizeOption + ' - ' + _value[1] + ' ' + props.sizeOption\r\n        return (\r\n            <div className={styles['value-badge-wrapper']}>\r\n                <span className=\"value-badge\">{rangeValue}</span>\r\n                {(_value.some(e => e > 0)) && <span className=\"reset-icon icon-bin\" onClick={resetSlider}></span>}\r\n            </div>\r\n        )\r\n    }, [value])\r\n\r\n    const bottomWrap = useMemo(() => {\r\n        if ((props.helperText || props.required) && !props.errors) {\r\n            const text = props.helperText || (props.required ? 'Required *' : '');\r\n            return (\r\n                <div className={styles['bottom-wrap']} ref={bottomWrapRef}>\r\n                    {text && <p className=\"helper-text\">{text}</p>}\r\n                </div>\r\n            )\r\n        } else if (props.errors) return (\r\n            <span ref={errorRef} className={styles['error-line']}>{props.errors}</span>\r\n        )\r\n    }, [props.helperText, props.errors, errorRef]);\r\n\r\n    const classesRangeSlider = useRangeSliderStyles({\r\n        ...sharedPropsOfClasses,\r\n    });\r\n    const classesFormControl = useFormControlStyles({\r\n        ...sharedPropsOfClasses,\r\n        width: props.fullWidth ? `calc(100% - ${UIGetMarginLeftRight(props.margin)}px)` : convertNaturalSize(props.width, 'px'),\r\n        size: props.size,\r\n    });\r\n\r\n    const classesLabel = useLabelStyles({\r\n        ...sharedPropsOfClasses,\r\n        color: (props.label && props.label.color) || '#fff',\r\n    });\r\n\r\n\r\n    useEffect(() => { // Calculate Margin Bottom\r\n        const bottomElementHeight = errorRef.current ? errorRef.current.offsetHeight + 2 :\r\n            bottomWrapRef.current ? bottomWrapRef.current.offsetHeight + 2 : 0;\r\n        setMarginBottom(bottomElementHeight /*marginTopBottom*/ + 'px');\r\n    }, [props.required, props.errors, errorRef.current, props.helperText, bottomWrapRef.current]);\r\n\r\n    return (\r\n        <FormControl classes={{root: classesFormControl.root}} style={{...generateMarginDiv()}}>\r\n            {props.label && <InputLabel\r\n                classes={classesLabel}\r\n                {...LabelProps}\r\n            >{props.label.title + (props.required ? ' *' : '')}</InputLabel>}\r\n            <div className={`${styles['input-slider']}`} data-disabled={props.disabled}>\r\n                <Slider\r\n                    disabled={props.disabled}\r\n                    classes={classesRangeSlider}\r\n                    value={value}\r\n                    defaultValue={defaultValue}\r\n                    onChange={handleChange}\r\n                    valueLabelDisplay=\"off\"\r\n                    aria-labelledby=\"range-slider\"\r\n                />\r\n                {topActions}\r\n                {bottomWrap}\r\n            </div>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nInputRange.defaultProps = {\r\n    size: 'md',\r\n    fullWidth: false,\r\n    margin: 0,\r\n    required: false,\r\n    min: 0,\r\n    max: 100,\r\n    value: [0],\r\n};\r\nInputRange.propTypes = {\r\n    sizeOption: PropTypes.string,\r\n    fullWidth: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    min: (props) => {\r\n        if (typeof props.min === 'number') {\r\n            if (props.value.some(e => e < props.min)) throw new Error('Minimum value can\\'t be smaller than value')\r\n        } else throw new Error('Minimum value must be Number')\r\n    },\r\n    max: PropTypes.number,\r\n    change: PropTypes.func,\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    errors: PropTypes.string,\r\n    label: PropTypes.object,\r\n    helperText: PropTypes.string,\r\n    direction: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    margin: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n    value: PropTypes.array,\r\n};\r\nexport default React.memo(InputRange);\r\n"]},"metadata":{},"sourceType":"module"}