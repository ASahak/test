{"ast":null,"code":"import _toConsumableArray from \"C:/Users/arthu/OneDrive/Desktop/Important/daser/next/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"C:/Users/arthu/OneDrive/Desktop/Important/daser/next/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\arthu\\\\OneDrive\\\\Desktop\\\\Important\\\\daser\\\\next\\\\test\\\\Components\\\\UI\\\\TimePicker\\\\index.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport UseStyles from './styles';\nimport { UiGenerateMargin, UIGetMarginLeftRight } from 'utils/handlers';\nimport useDevice from 'hooks/use-media-device';\nimport InputMask from 'react-input-mask';\nimport { useAutoCompleteStyles, useFormControlStyles, useLabelStyles } from '../makeStylesUI';\nimport variablesJSS from 'static/styles/jss/variables';\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport variables from \"static/styles/jss/variables\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { addMinutes, isAfter } from 'date-fns';\nimport 'rmc-picker/assets/index.css';\nimport MobileTimePicker from 'rmc-picker/lib/Picker';\nimport Dialog from '@material-ui/core/Dialog';\nvar canUseDOM = true;\nReact.useLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n\nvar TimePicker = function TimePicker(props) {\n  _s();\n\n  var _useDevice = useDevice(),\n      deviceType = _useDevice.deviceType;\n\n  var _useState = useState([]),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var _useState2 = useState({\n    hour: null,\n    minute: null\n  }),\n      mobileDate = _useState2[0],\n      setMobileDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      isMobile = _useState3[0],\n      setIsMobile = _useState3[1];\n\n  var _useState4 = useState({\n    prev: false,\n    next: false\n  }),\n      disableBtn = _useState4[0],\n      setDisableBtn = _useState4[1];\n\n  var _useState5 = useState(null),\n      time = _useState5[0],\n      setTime = _useState5[1];\n\n  var _useState6 = useState('0px'),\n      marginBottom = _useState6[0],\n      setMarginBottom = _useState6[1];\n\n  var _useState7 = useState(false),\n      isOpen = _useState7[0],\n      setIsOpen = _useState7[1];\n\n  var _useState8 = useState({}),\n      propsOfStyles = _useState8[0],\n      setPropsOfStyles = _useState8[1];\n\n  var _useState9 = useState({}),\n      autocompleteValue = _useState9[0],\n      setAutocompleteValue = _useState9[1];\n\n  var errorRef = useRef();\n  var bottomWrapRef = useRef();\n  var inputRef = useRef();\n  var maskRef = useRef();\n  var styles = UseStyles(propsOfStyles, {\n    link: true\n  }); // Get position of main Wrapper\n\n  var generateMarginDiv = useCallback(function () {\n    return UiGenerateMargin(props.margin, props.direction);\n  }, [props.direction, props.margin]);\n  var convertNaturalSize = useCallback(function (prop, what) {\n    if (isNaN(+prop)) return prop;else return prop + what;\n  }, [props.width]);\n  var sharedPropsOfClasses = useMemo(function () {\n    var backgroundColor = props.theme === 'dark' ? variablesJSS.$input.$theme.$dark : variablesJSS.$input.$theme.$light;\n    var boxShadow = props.theme === 'dark' ? variablesJSS.$select.$dark.$borderColor + ' 0px 0px 0px 1px' : 'none';\n    return {\n      backgroundColor: backgroundColor,\n      boxShadow: boxShadow,\n      marginBottom: marginBottom,\n      isDark: props.theme === 'dark',\n      listItemColor: props.theme === 'dark' ? variables.$select.$dark.$textColor : variables.$select.$textColor,\n      selectedItemColor: props.theme === 'dark' ? variables.$select.$dark.$selected.$color : variables.$select.$selected.$color,\n      selectedItemBG: props.theme === 'dark' ? variables.$select.$dark.$selected.$bgColor : variables.$select.$selected.$bgColor,\n      valueColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$textColor : variablesJSS.$datepicker.$textColor,\n      actionsColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$actionsColor : variablesJSS.$datepicker.$actionsColor,\n      weekColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$weekColor : variablesJSS.$datepicker.$weekColor,\n      placeholderColor: props.theme === 'dark' ? variablesJSS.$select.$dark.$emptyTextColor : variablesJSS.$select.$emptyTextColor,\n      size: props.size,\n      isOpened: isOpen && !isMobile,\n      iconColor: props.theme === 'dark' ? variablesJSS.$input.$theme.$darkColor : '#000'\n    };\n  }, [isOpen, props.size, props.theme, marginBottom, props.value, isMobile]);\n  var classesAutoComplete = useAutoCompleteStyles(sharedPropsOfClasses);\n  var classesLabel = useLabelStyles(_objectSpread(_objectSpread({}, sharedPropsOfClasses), {}, {\n    color: props.label && props.label.color || '#fff'\n  }));\n  var classesFormControl = useFormControlStyles(_objectSpread(_objectSpread({}, sharedPropsOfClasses), {}, {\n    width: props.fullWidth ? \"calc(100% - \".concat(UIGetMarginLeftRight(props.margin), \"px)\") : convertNaturalSize(props.width, 'px'),\n    size: props.size\n  }));\n  useEffect(function () {\n    var isDark = props.theme === 'dark';\n    setPropsOfStyles({\n      isDark: isDark,\n      backgroundColor: isDark ? variablesJSS.$input.$theme.$dark : variablesJSS.$input.$theme.$light,\n      actionsColor: isDark ? '#fff' : variables.$datepicker.$actionsColor,\n      textColor: isDark ? '#fff' : '#000',\n      selectedItem: isDark ? 'rgb(251 251 251 / 32%)' : '#BEBEBE',\n      border: isDark ? '1px solid #11509F' : 'none',\n      overlayBG: isDark ? 'rgb(255 243 243 / 30%)' : 'rgba(0,0,0, .5)'\n    });\n  }, [props.theme]);\n  useEffect(function () {\n    // Generate Options\n    var generateTime = function generateTime(time) {\n      return {\n        hour: time.split(':')[0],\n        minute: time.split(':')[1]\n      };\n    };\n\n    var getTime = {\n      start: _objectSpread({}, generateTime(props.options.start)),\n      end: _objectSpread({}, generateTime(props.options.end))\n    };\n    var datePeriod = new Date();\n    var dateEnd = new Date();\n    datePeriod.setHours(getTime.start.hour);\n    datePeriod.setMinutes(getTime.start.minute);\n    dateEnd.setHours(getTime.end.hour);\n    dateEnd.setMinutes(getTime.end.minute);\n    dateEnd = new Date(new Date(dateEnd).getTime() - props.options.interval * 1000 * 60);\n    var index = 0;\n    var dates = [];\n\n    while (!isAfter(datePeriod, dateEnd)) {\n      var newDate = addMinutes(new Date(null, null, null, getTime.start.hour, getTime.start.minute), +props.options.interval * index);\n      var option = newDate.getHours() + ':' + (newDate.getMinutes() < 10 ? '0' : '') + newDate.getMinutes();\n      dates.push({\n        title: option,\n        value: option\n      });\n      var newDatePeriod = generateTime(option);\n      datePeriod.setHours(newDatePeriod.hour);\n      datePeriod.setMinutes(newDatePeriod.minute);\n      index++;\n    }\n\n    setOptions(dates);\n  }, [props.options]);\n  useEffect(function () {\n    // Detect if device is Mobile\n    if (deviceType === 'mobile') {\n      setIsMobile(true);\n    } else setIsMobile(false);\n  }, [deviceType]);\n  useEffect(function () {\n    // Calculate Margin Bottom\n    var bottomElementHeight = errorRef.current ? errorRef.current.offsetHeight + 2 : bottomWrapRef.current ? bottomWrapRef.current.offsetHeight + 2 : 0;\n    setMarginBottom(bottomElementHeight\n    /*marginTopBottom*/\n    + 'px');\n  }, [props.required, props.errors, errorRef.current, props.helperText, bottomWrapRef.current]);\n  useEffect(function () {\n    isMobile && maskRef.current && maskRef.current.blur();\n  }, [isOpen, maskRef.current, isMobile]);\n  useEffect(function () {\n    // Disable the prev/next buttons\n    if (time === null && props.value) {\n      setTime(props.value);\n      setAutocompleteValue({\n        title: props.value,\n        value: props.value\n      });\n    }\n\n    var value = time !== null ? time : props.value || '';\n    if (isMobile) setMobileDate({\n      hour: value.split(':')[0],\n      minute: value.split(':')[1]\n    });\n    var findIndex = options.findIndex(function (e) {\n      return e.value === value;\n    });\n    setDisableBtn({\n      prev: findIndex <= 0 || value && findIndex < 0,\n      next: findIndex >= options.length - 1 || value && findIndex < 0\n    });\n  }, [props.value, options, time, isMobile]);\n\n  var inputMaskChange = function inputMaskChange(evt) {\n    setTime(evt.target.value);\n  };\n\n  var inputBlur = function inputBlur() {\n    if (time && !options.some(function (e) {\n      return e.value === time;\n    }) || typeof time === 'string' && !time.length || autocompleteValue && autocompleteValue.value !== time) {\n      setTime(autocompleteValue.value);\n    }\n\n    !isMobile && setIsOpen(false);\n  };\n\n  var selectTime = function selectTime(_ref, _ref2) {\n    var target = _ref.target;\n    var title = _ref2.title,\n        value = _ref2.value;\n    setIsOpen(true);\n    maskRef.current && maskRef.current.blur();\n    setTime(value);\n    setAutocompleteValue({\n      title: title,\n      value: value\n    });\n  };\n\n  var selectMobileTime = function selectMobileTime() {\n    var _time = mobileDate.hour + ':' + mobileDate.minute;\n\n    setTime(_time);\n    setAutocompleteValue({\n      title: _time,\n      value: _time\n    });\n    setIsOpen(false);\n  };\n\n  var mobilePickerValueChange = function mobilePickerValueChange(val, type) {\n    setMobileDate({\n      hour: type === 'hour' ? val : mobileDate.hour,\n      minute: type === 'minute' ? val : mobileDate.minute\n    });\n  };\n\n  var handleTimePickerClose = function handleTimePickerClose() {\n    setIsOpen(false);\n    setMobileDate({\n      hour: time.split(':')[0],\n      minute: time.split(':')[1]\n    });\n  };\n\n  var LabelProps = useMemo(function () {\n    return _objectSpread({\n      disableAnimation: true,\n      variant: 'filled',\n      focused: false,\n      shrink: false\n    }, props.error && {\n      error: props.error\n    });\n  }, [props]);\n  var arrows = useMemo(function () {\n    var changeDirection = function changeDirection(evt, dir) {\n      evt.stopPropagation();\n      var currentIndex = options.findIndex(function (e) {\n        return e.value === time;\n      });\n\n      if (!disableBtn.prev && dir === 'prev') {\n        var _value = options[currentIndex > -1 ? currentIndex - 1 : options.length - 1].value;\n        setTime(_value);\n        setAutocompleteValue({\n          title: _value,\n          value: _value\n        });\n      } else if (!disableBtn.next && dir === 'next') {\n        var _value2 = options[currentIndex > -1 ? currentIndex + 1 : 0].value;\n        setTime(_value2);\n        setAutocompleteValue({\n          title: _value2,\n          value: _value2\n        });\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'arrows-slide-datepicker',\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        onClick: function onClick(e) {\n          return changeDirection(e, 'prev');\n        },\n        className: \"left-icon \".concat(disableBtn.prev ? 'disable-btn' : ''),\n        focusable: \"false\",\n        viewBox: \"0 0 24 24\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7 10l5 5 5-5z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        onClick: function onClick(e) {\n          return changeDirection(e, 'next');\n        },\n        className: \"right-icon \".concat(disableBtn.next ? 'disable-btn' : ''),\n        focusable: \"false\",\n        viewBox: \"0 0 24 24\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M7 10l5 5 5-5z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, _this);\n  }, [disableBtn, props.value, options, time]);\n  var mobileDates = useMemo(function () {\n    return options.reduce(function (acc, item) {\n      var splitDate = item.title.replace(/ /g, '').split(':');\n      acc[splitDate[0]] = [].concat(_toConsumableArray(acc[splitDate[0]] || []), [splitDate[1]]);\n      return acc;\n    }, {});\n  }, [options]);\n  var bottomWrap = useMemo(function () {\n    if ((props.helperText || props.required) && !props.errors) {\n      var text = props.helperText || (props.required ? 'Required *' : '');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['bottom-wrap'],\n        ref: bottomWrapRef,\n        children: text && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helper-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 30\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, _this);\n    } else if (props.errors) return /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: errorRef,\n      className: styles['error-line'],\n      children: props.errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, _this);\n  }, [props.helperText, props.errors, errorRef]);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    classes: {\n      root: classesFormControl.root\n    },\n    style: _objectSpread({}, generateMarginDiv()),\n    children: [props.label && /*#__PURE__*/_jsxDEV(InputLabel, _objectSpread(_objectSpread({\n      classes: classesLabel\n    }, LabelProps), {}, {\n      children: props.label.title + (props.required ? ' *' : '')\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mask-input \".concat(isOpen ? 'focused-input' : ''),\n      \"data-disabled\": props.disabled,\n      children: [/*#__PURE__*/_jsxDEV(InputMask, {\n        mask: \"99:99\",\n        onFocus: function onFocus() {\n          return !isMobile && setIsOpen(true);\n        },\n        onBlur: function onBlur() {\n          return inputBlur();\n        },\n        value: time || '',\n        onChange: inputMaskChange,\n        disabled: false,\n        maskChar: \"\",\n        children: function children() {\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            onClick: function onClick() {\n              return isMobile && setIsOpen(true);\n            },\n            InputProps: {\n              disabled: props.disabled,\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon-clock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, _this),\n              endAdornment: props.slideByArrows ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: arrows\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 66\n              }, _this) : null\n            },\n            inputRef: maskRef,\n            variant: \"filled\",\n            focused: false,\n            placeholder: props.placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 28\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, _this), isMobile ? /*#__PURE__*/_jsxDEV(Dialog, {\n        onClose: handleTimePickerClose,\n        \"aria-labelledby\": \"simple-dialog-title\",\n        open: isOpen,\n        className: styles['timepicker-dialog'],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['mobile-wheel-picker'],\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Select time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pickers-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(MobileTimePicker, {\n              selectedValue: mobileDate.hour,\n              onValueChange: function onValueChange(val) {\n                return mobilePickerValueChange(val, 'hour');\n              },\n              children: Object.keys(mobileDates).map(function (hour) {\n                return /*#__PURE__*/_jsxDEV(MobileTimePicker.Item, {\n                  value: hour,\n                  children: hour\n                }, hour, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 71\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, _this), mobileDate.hour ? /*#__PURE__*/_jsxDEV(MobileTimePicker, {\n              selectedValue: mobileDate.minute,\n              onValueChange: function onValueChange(val) {\n                return mobilePickerValueChange(val, 'minute');\n              },\n              children: mobileDates[mobileDate.hour].map(function (minute) {\n                return /*#__PURE__*/_jsxDEV(MobileTimePicker.Item, {\n                  value: minute,\n                  children: minute\n                }, minute, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 77\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 48\n            }, _this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTimePickerClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: selectMobileTime,\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }, _this) : /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disabled: props.disabled,\n        disableCloseOnSelect: false,\n        disableListWrap: false,\n        classes: classesAutoComplete,\n        options: options,\n        getOptionSelected: function getOptionSelected(option, value) {\n          return option.title === value.title;\n        },\n        renderOption: function renderOption(option) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: option.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 47\n          }, _this);\n        },\n        getOptionLabel: function getOptionLabel(option) {\n          return option.title;\n        },\n        open: isOpen,\n        onOpen: function onOpen() {\n          return setIsOpen(true);\n        },\n        onClose: function onClose() {\n          return setIsOpen(false);\n        },\n        onChange: selectTime,\n        inputValue: time || '',\n        value: {\n          title: autocompleteValue.title || '',\n          value: autocompleteValue.value || ''\n        },\n        defaultValue: props.value ? {\n          title: props.value || '',\n          value: props.value || ''\n        } : null,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n            inputRef: inputRef\n          }, params), {}, {\n            variant: \"filled\",\n            focused: false\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 46\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 29\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, _this), bottomWrap]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TimePicker, \"CGscKDQK99wXBMz7B6XEJmHVar0=\", false, function () {\n  return [useDevice, useAutoCompleteStyles, useLabelStyles, useFormControlStyles];\n});\n\n_c = TimePicker;\nTimePicker.defaultProps = {\n  size: 'md',\n  fullWidth: false,\n  margin: 0,\n  required: false,\n  theme: 'light',\n  format: 'AM',\n  slideByArrows: false\n};\nTimePicker.propTypes = {\n  format: PropTypes.string,\n  required: PropTypes.bool,\n  slideByArrows: PropTypes.bool,\n  theme: PropTypes.string,\n  helperText: PropTypes.string,\n  direction: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  size: PropTypes.string,\n  refBind: PropTypes.any,\n  label: PropTypes.object,\n  options: PropTypes.shape({\n    start: PropTypes.string,\n    interval: PropTypes.string | PropTypes.number,\n    end: PropTypes.string\n  }).isRequired,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  errors: PropTypes.string,\n  change: PropTypes.func,\n  shouldDisablePastDate: PropTypes.bool,\n  margin: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nexport default _c2 = /*#__PURE__*/React.memo(TimePicker);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TimePicker\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/test/Components/UI/TimePicker/index.jsx"],"names":["React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","useState","PropTypes","UseStyles","UiGenerateMargin","UIGetMarginLeftRight","useDevice","InputMask","useAutoCompleteStyles","useFormControlStyles","useLabelStyles","variablesJSS","Autocomplete","TextField","variables","InputLabel","FormControl","InputAdornment","addMinutes","isAfter","MobileTimePicker","Dialog","canUseDOM","TimePicker","props","deviceType","options","setOptions","hour","minute","mobileDate","setMobileDate","isMobile","setIsMobile","prev","next","disableBtn","setDisableBtn","time","setTime","marginBottom","setMarginBottom","isOpen","setIsOpen","propsOfStyles","setPropsOfStyles","autocompleteValue","setAutocompleteValue","errorRef","bottomWrapRef","inputRef","maskRef","styles","link","generateMarginDiv","margin","direction","convertNaturalSize","prop","what","isNaN","width","sharedPropsOfClasses","backgroundColor","theme","$input","$theme","$dark","$light","boxShadow","$select","$borderColor","isDark","listItemColor","$textColor","selectedItemColor","$selected","$color","selectedItemBG","$bgColor","valueColor","$datepicker","actionsColor","$actionsColor","weekColor","$weekColor","placeholderColor","$emptyTextColor","size","isOpened","iconColor","$darkColor","value","classesAutoComplete","classesLabel","color","label","classesFormControl","fullWidth","textColor","selectedItem","border","overlayBG","generateTime","split","getTime","start","end","datePeriod","Date","dateEnd","setHours","setMinutes","interval","index","dates","newDate","option","getHours","getMinutes","push","title","newDatePeriod","bottomElementHeight","current","offsetHeight","required","errors","helperText","blur","findIndex","e","length","inputMaskChange","evt","target","inputBlur","some","selectTime","selectMobileTime","_time","mobilePickerValueChange","val","type","handleTimePickerClose","LabelProps","disableAnimation","variant","focused","shrink","error","arrows","changeDirection","dir","stopPropagation","currentIndex","_value","mobileDates","reduce","acc","item","splitDate","replace","bottomWrap","text","root","disabled","startAdornment","endAdornment","slideByArrows","placeholder","Object","keys","map","params","defaultProps","format","propTypes","string","bool","refBind","any","object","shape","number","isRequired","oneOfType","change","func","shouldDisablePastDate","array","memo"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UseStyles from './styles';\r\nimport {UiGenerateMargin, UIGetMarginLeftRight} from 'utils/handlers';\r\nimport useDevice from 'hooks/use-media-device';\r\nimport InputMask from 'react-input-mask';\r\nimport {\r\n    useAutoCompleteStyles,\r\n    useFormControlStyles,\r\n    useLabelStyles,\r\n} from '../makeStylesUI';\r\nimport variablesJSS from 'static/styles/jss/variables';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport variables from \"static/styles/jss/variables\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {addMinutes, isAfter} from 'date-fns';\r\nimport 'rmc-picker/assets/index.css';\r\nimport MobileTimePicker from 'rmc-picker/lib/Picker';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nconst canUseDOM = (typeof window !== 'undefined');\r\nReact.useLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\r\n\r\nconst TimePicker = (props) => {\r\n    const {deviceType} = useDevice();\r\n    const [options, setOptions] = useState([]);\r\n    const [mobileDate, setMobileDate] = useState({\r\n        hour: null,\r\n        minute: null,\r\n    });\r\n    const [isMobile, setIsMobile] = useState(false);\r\n    const [disableBtn, setDisableBtn] = useState({\r\n        prev: false,\r\n        next: false,\r\n    });\r\n    const [time, setTime] = useState(null);\r\n    const [marginBottom, setMarginBottom] = useState('0px');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [propsOfStyles, setPropsOfStyles] = useState({})\r\n    const [autocompleteValue, setAutocompleteValue] = useState({})\r\n    const errorRef = useRef();\r\n    const bottomWrapRef = useRef();\r\n    const inputRef = useRef();\r\n    const maskRef = useRef();\r\n    const styles = UseStyles(propsOfStyles, {link: true});\r\n\r\n    // Get position of main Wrapper\r\n    const generateMarginDiv = useCallback(() => UiGenerateMargin(props.margin, props.direction), [props.direction, props.margin]);\r\n\r\n\r\n    const convertNaturalSize = useCallback((prop, what) => {\r\n        if (isNaN(+prop)) return prop;\r\n        else return prop + what;\r\n    }, [props.width]);\r\n\r\n    const sharedPropsOfClasses = useMemo(() => {\r\n        const backgroundColor = props.theme === 'dark' ? variablesJSS.$input.$theme.$dark : variablesJSS.$input.$theme.$light;\r\n        const boxShadow = props.theme === 'dark' ? variablesJSS.$select.$dark.$borderColor + ' 0px 0px 0px 1px' : 'none';\r\n        return {\r\n            backgroundColor,\r\n            boxShadow,\r\n            marginBottom: marginBottom,\r\n            isDark: props.theme === 'dark',\r\n            listItemColor: props.theme === 'dark' ? variables.$select.$dark.$textColor : variables.$select.$textColor,\r\n            selectedItemColor: props.theme === 'dark' ? variables.$select.$dark.$selected.$color : variables.$select.$selected.$color,\r\n            selectedItemBG: props.theme === 'dark' ? variables.$select.$dark.$selected.$bgColor : variables.$select.$selected.$bgColor,\r\n            valueColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$textColor : variablesJSS.$datepicker.$textColor,\r\n            actionsColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$actionsColor : variablesJSS.$datepicker.$actionsColor,\r\n            weekColor: props.theme === 'dark' ? variablesJSS.$datepicker.$dark.$weekColor : variablesJSS.$datepicker.$weekColor,\r\n            placeholderColor: props.theme === 'dark' ? variablesJSS.$select.$dark.$emptyTextColor : variablesJSS.$select.$emptyTextColor,\r\n            size: props.size,\r\n            isOpened: isOpen && !isMobile,\r\n            iconColor: props.theme === 'dark' ? variablesJSS.$input.$theme.$darkColor : '#000',\r\n        }\r\n    }, [isOpen, props.size, props.theme, marginBottom, props.value, isMobile]);\r\n\r\n    const classesAutoComplete = useAutoCompleteStyles(sharedPropsOfClasses);\r\n\r\n    const classesLabel = useLabelStyles({\r\n        ...sharedPropsOfClasses,\r\n        color: (props.label && props.label.color) || '#fff',\r\n    });\r\n\r\n    const classesFormControl = useFormControlStyles({\r\n        ...sharedPropsOfClasses,\r\n        width: props.fullWidth ? `calc(100% - ${UIGetMarginLeftRight(props.margin)}px)` : convertNaturalSize(props.width, 'px'),\r\n        size: props.size,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const isDark = props.theme === 'dark';\r\n        setPropsOfStyles({\r\n            isDark: isDark,\r\n            backgroundColor: isDark ? variablesJSS.$input.$theme.$dark : variablesJSS.$input.$theme.$light,\r\n            actionsColor: isDark ? '#fff' : variables.$datepicker.$actionsColor,\r\n            textColor: isDark ? '#fff' : '#000',\r\n            selectedItem: isDark ? 'rgb(251 251 251 / 32%)' : '#BEBEBE',\r\n            border: isDark ? '1px solid #11509F' : 'none',\r\n            overlayBG: isDark ? 'rgb(255 243 243 / 30%)' : 'rgba(0,0,0, .5)',\r\n        })\r\n    }, [props.theme])\r\n\r\n    useEffect(() => { // Generate Options\r\n        const generateTime = (time) => {\r\n            return {\r\n                hour: time.split(':')[0],\r\n                minute: time.split(':')[1],\r\n            }\r\n        }\r\n        const getTime = {\r\n            start: {\r\n                ...generateTime(props.options.start)\r\n            }, end: {\r\n                ...generateTime(props.options.end)\r\n            }\r\n        };\r\n        let datePeriod = new Date();\r\n        let dateEnd = new Date();\r\n        datePeriod.setHours(getTime.start.hour);\r\n        datePeriod.setMinutes(getTime.start.minute);\r\n        dateEnd.setHours(getTime.end.hour);\r\n        dateEnd.setMinutes(getTime.end.minute);\r\n        dateEnd = new Date(new Date(dateEnd).getTime() - props.options.interval * 1000 * 60)\r\n        let index = 0;\r\n        const dates = [];\r\n        while(!isAfter(datePeriod, dateEnd)) {\r\n            const newDate = addMinutes(new Date( null, null, null, getTime.start.hour, getTime.start.minute), +props.options.interval * index);\r\n            const option = newDate.getHours() + ':' + (newDate.getMinutes() < 10 ? '0' : '') + newDate.getMinutes();\r\n            dates.push({title: option, value: option});\r\n            const newDatePeriod = generateTime(option)\r\n            datePeriod.setHours(newDatePeriod.hour);\r\n            datePeriod.setMinutes(newDatePeriod.minute);\r\n            index++;\r\n        }\r\n        setOptions(dates);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => { // Detect if device is Mobile\r\n        if (deviceType === 'mobile') {\r\n            setIsMobile(true)\r\n        } else setIsMobile(false)\r\n    }, [deviceType])\r\n\r\n    useEffect(() => { // Calculate Margin Bottom\r\n        const bottomElementHeight = errorRef.current ? errorRef.current.offsetHeight + 2 :\r\n            bottomWrapRef.current ? bottomWrapRef.current.offsetHeight + 2 : 0;\r\n        setMarginBottom(bottomElementHeight /*marginTopBottom*/ + 'px');\r\n    }, [props.required, props.errors, errorRef.current, props.helperText, bottomWrapRef.current]);\r\n\r\n    useEffect(() => {\r\n        (isMobile && maskRef.current) && maskRef.current.blur();\r\n    }, [isOpen, maskRef.current, isMobile])\r\n\r\n    useEffect(() => { // Disable the prev/next buttons\r\n        if(time === null && props.value) {\r\n            setTime(props.value);\r\n            setAutocompleteValue({\r\n                title: props.value,\r\n                value: props.value,\r\n            })\r\n        }\r\n\r\n        const value = time !== null ? time : props.value || '';\r\n        if (isMobile) setMobileDate({\r\n            hour: value.split(':')[0],\r\n            minute: value.split(':')[1],\r\n        })\r\n\r\n        const findIndex = options.findIndex(e => e.value === value);\r\n        setDisableBtn({\r\n            prev: findIndex <= 0 || value && findIndex < 0,\r\n            next: findIndex >= options.length - 1 || value && findIndex < 0,\r\n        })\r\n    }, [props.value, options, time, isMobile])\r\n\r\n    const inputMaskChange = (evt) => {\r\n        setTime(evt.target.value)\r\n    };\r\n\r\n    const inputBlur = () => {\r\n        if ((time && !options.some(e => e.value === time)) || (typeof time === 'string' && !time.length)  || (autocompleteValue && autocompleteValue.value !== time)){\r\n            setTime(autocompleteValue.value);\r\n        }\r\n        !isMobile && setIsOpen(false)\r\n    }\r\n\r\n    const selectTime = ({target}, {title, value}) => {\r\n        setIsOpen(true);\r\n        maskRef.current && maskRef.current.blur();\r\n        setTime(value);\r\n        setAutocompleteValue({\r\n            title,\r\n            value,\r\n        })\r\n    }\r\n\r\n    const selectMobileTime = () => {\r\n        const _time = mobileDate.hour + ':' + mobileDate.minute;\r\n        setTime(_time);\r\n        setAutocompleteValue({\r\n            title: _time,\r\n            value: _time,\r\n        })\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const mobilePickerValueChange = (val, type) => {\r\n        setMobileDate({\r\n            hour: type === 'hour' ? val : mobileDate.hour,\r\n            minute: type === 'minute' ? val : mobileDate.minute,\r\n        })\r\n    }\r\n\r\n    const handleTimePickerClose = () => {\r\n        setIsOpen(false)\r\n        setMobileDate({\r\n            hour: time.split(':')[0],\r\n            minute: time.split(':')[1],\r\n        })\r\n    }\r\n\r\n    const LabelProps = useMemo(() => ({\r\n        disableAnimation: true,\r\n        variant: 'filled',\r\n        focused: false,\r\n        shrink: false,\r\n        ...(props.error && {error: props.error})\r\n    }), [props]);\r\n\r\n    const arrows = useMemo(() => {\r\n        const changeDirection = (evt, dir) => {\r\n            evt.stopPropagation();\r\n            const currentIndex = options.findIndex(e => e.value === time);\r\n            if (!disableBtn.prev && dir === 'prev') {\r\n                const _value = options[currentIndex > -1 ? currentIndex - 1 : options.length - 1].value;\r\n                setTime(_value)\r\n                setAutocompleteValue({\r\n                    title: _value,\r\n                    value: _value,\r\n                })\r\n            } else if (!disableBtn.next && dir === 'next') {\r\n                const _value = options[currentIndex > -1 ? currentIndex + 1 : 0].value;\r\n                setTime(_value)\r\n                setAutocompleteValue({\r\n                    title: _value,\r\n                    value: _value,\r\n                })\r\n            }\r\n        };\r\n        return (\r\n            <div className={'arrows-slide-datepicker'}>\r\n                <svg onClick={(e) => changeDirection(e, 'prev')} className={`left-icon ${disableBtn.prev ? 'disable-btn' : ''}`} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M7 10l5 5 5-5z\"></path>\r\n                </svg>\r\n                <svg onClick={(e) => changeDirection(e, 'next')} className={`right-icon ${disableBtn.next ? 'disable-btn' : ''}`} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M7 10l5 5 5-5z\"></path>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }, [disableBtn, props.value, options, time])\r\n\r\n    const mobileDates = useMemo(() => {\r\n        return options.reduce((acc, item) => {\r\n            const splitDate = item.title.replace(/ /g,'').split(':');\r\n            acc[splitDate[0]] = [...(acc[splitDate[0]] || []), splitDate[1]];\r\n            return acc;\r\n        }, {})\r\n    }, [options]);\r\n\r\n    const bottomWrap = useMemo(() => {\r\n        if ((props.helperText || props.required) && !props.errors) {\r\n            const text = props.helperText || (props.required ? 'Required *' : '');\r\n            return (\r\n                <div className={styles['bottom-wrap']} ref={bottomWrapRef}>\r\n                    {text && <p className=\"helper-text\">{text}</p>}\r\n                </div>\r\n            )\r\n        } else if (props.errors) return (\r\n            <span ref={errorRef} className={styles['error-line']}>{props.errors}</span>\r\n        )\r\n    }, [props.helperText, props.errors, errorRef]);\r\n\r\n    return (\r\n        <FormControl classes={{root: classesFormControl.root}} style={{...generateMarginDiv()}}>\r\n            {props.label && <InputLabel\r\n                classes={classesLabel}\r\n                {...LabelProps}\r\n            >{props.label.title + (props.required ? ' *' : '')}</InputLabel>}\r\n            <div className={`mask-input ${isOpen ? 'focused-input' : ''}`} data-disabled={props.disabled}>\r\n                <InputMask\r\n                    mask=\"99:99\"\r\n                    onFocus={() => !isMobile && setIsOpen(true)}\r\n                    onBlur={() => inputBlur()}\r\n                    value={time || ''}\r\n                    onChange={inputMaskChange}\r\n                    disabled={false}\r\n                    maskChar=\"\"\r\n                >\r\n                    {() => <TextField\r\n                        onClick={() => isMobile && setIsOpen(true)}\r\n                        InputProps={{\r\n                            disabled:props.disabled,\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <span className=\"icon-clock\"></span>\r\n                                </InputAdornment>\r\n                            ),\r\n                            endAdornment: (props.slideByArrows ? <InputAdornment position=\"end\">\r\n                                {arrows}\r\n                            </InputAdornment> : null),\r\n                        }} inputRef={maskRef} variant=\"filled\" focused={false} placeholder={props.placeholder}/>}\r\n                </InputMask>\r\n                {isMobile ? <Dialog onClose={handleTimePickerClose} aria-labelledby=\"simple-dialog-title\" open={isOpen} className={styles['timepicker-dialog']}>\r\n                    <div className={styles['mobile-wheel-picker']}>\r\n                        <h4>Select time</h4>\r\n                        <div className=\"pickers-wrapper\">\r\n                            <MobileTimePicker\r\n                                selectedValue={mobileDate.hour}\r\n                                onValueChange={(val) => mobilePickerValueChange(val, 'hour')}\r\n                            >\r\n                                {Object.keys(mobileDates).map(hour => <MobileTimePicker.Item value={hour} key={hour}>{hour}</MobileTimePicker.Item>)}\r\n                            </MobileTimePicker>\r\n                            {mobileDate.hour ? <MobileTimePicker\r\n                                selectedValue={mobileDate.minute}\r\n                                onValueChange={(val) => mobilePickerValueChange(val, 'minute')}\r\n                            >\r\n                                {mobileDates[mobileDate.hour].map(minute => <MobileTimePicker.Item value={minute} key={minute}>{minute}</MobileTimePicker.Item>)}\r\n                            </MobileTimePicker> : ''}\r\n                        </div>\r\n                        <div className=\"actions-wrap\">\r\n                            <button onClick={handleTimePickerClose}>Cancel</button>\r\n                            <button onClick={selectMobileTime}>Select</button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog> : <Autocomplete\r\n                    disabled={props.disabled}\r\n                    disableCloseOnSelect={false}\r\n                    disableListWrap={false}\r\n                    classes={classesAutoComplete}\r\n                    options={options}\r\n                    getOptionSelected={(option, value) => option.title === value.title}\r\n                    renderOption={(option) => <div>{option.title}</div>}\r\n                    getOptionLabel={(option) => option.title}\r\n                    open={isOpen}\r\n                    onOpen={() => setIsOpen(true)}\r\n                    onClose={() => setIsOpen(false)}\r\n                    onChange={selectTime}\r\n                    inputValue={time || ''}\r\n                    value={{title: autocompleteValue.title || '', value: autocompleteValue.value || ''}}\r\n                    defaultValue={props.value ? {title: props.value || '', value: props.value || ''} : null}\r\n                    renderInput={(params) => <TextField inputRef={inputRef} {...params} variant=\"filled\" focused={false}/> }\r\n                />}\r\n            </div>\r\n            {bottomWrap}\r\n        </FormControl>\r\n    )\r\n}\r\nTimePicker.defaultProps = {\r\n    size: 'md',\r\n    fullWidth: false,\r\n    margin: 0,\r\n    required: false,\r\n    theme: 'light',\r\n    format: 'AM',\r\n    slideByArrows: false,\r\n};\r\nTimePicker.propTypes = {\r\n    format: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    slideByArrows: PropTypes.bool,\r\n    theme: PropTypes.string,\r\n    helperText: PropTypes.string,\r\n    direction: PropTypes.string,\r\n    fullWidth: PropTypes.bool,\r\n    size: PropTypes.string,\r\n    refBind: PropTypes.any,\r\n    label: PropTypes.object,\r\n    options: PropTypes.shape({\r\n        start: PropTypes.string,\r\n        interval: PropTypes.string | PropTypes.number,\r\n        end: PropTypes.string,\r\n    }).isRequired,\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    errors: PropTypes.string,\r\n    change: PropTypes.func,\r\n    shouldDisablePastDate: PropTypes.bool,\r\n    margin: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.object,\r\n    ]),\r\n};\r\nexport default React.memo(TimePicker);"]},"metadata":{},"sourceType":"module"}