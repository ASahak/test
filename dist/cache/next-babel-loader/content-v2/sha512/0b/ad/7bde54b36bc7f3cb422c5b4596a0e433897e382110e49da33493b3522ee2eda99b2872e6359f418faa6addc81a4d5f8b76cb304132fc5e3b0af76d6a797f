{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/arthu/OneDrive/Desktop/Important/daser/next/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\arthu\\\\OneDrive\\\\Desktop\\\\Important\\\\daser\\\\next\\\\test\\\\pages\\\\ui-kit.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react'; // import {\n//     Tag,\n// } from 'Components/UI';\n\nimport { useForm } from 'react-hook-form';\n\nvar UiKit = function UiKit(props) {\n  _s();\n\n  var _useState = useState(['some-tag-2']),\n      selectedTags = _useState[0],\n      setSelectedTags = _useState[1];\n\n  var _useState2 = useState(false),\n      loadingIcon = _useState2[0],\n      setLoadingIcon = _useState2[1];\n\n  var isSelectedTag = useCallback(function (id) {\n    return selectedTags.includes(id);\n  }, [selectedTags]);\n  var changeSelectedTag = useCallback(function (id) {\n    var tags = selectedTags;\n    if (tags.includes(id)) tags = tags.filter(function (e) {\n      return e !== id;\n    });else tags.push(id);\n    setSelectedTags(_toConsumableArray(tags));\n  }, [selectedTags]);\n\n  var change = function change() {\n    return setLoadingIcon(!loadingIcon);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#153F8F',\n      padding: '40px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: \"AAA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UiKit, \"RUi7uUlBgNw0HvggbR+bzwhDS+o=\");\n\n_c = UiKit;\nexport default UiKit;\n\nvar _c;\n\n$RefreshReg$(_c, \"UiKit\");","map":{"version":3,"sources":["C:/Users/arthu/OneDrive/Desktop/Important/daser/next/test/pages/ui-kit.js"],"names":["React","useCallback","useEffect","useState","useForm","UiKit","props","selectedTags","setSelectedTags","loadingIcon","setLoadingIcon","isSelectedTag","id","includes","changeSelectedTag","tags","filter","e","push","change","backgroundColor","padding","display","alignItems"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD,C,CACA;AACA;AACA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACmBH,QAAQ,CAAC,CAAC,YAAD,CAAD,CAD3B;AAAA,MACdI,YADc;AAAA,MACAC,eADA;;AAAA,mBAEiBL,QAAQ,CAAC,KAAD,CAFzB;AAAA,MAEdM,WAFc;AAAA,MAEDC,cAFC;;AAIrB,MAAMC,aAAa,GAAGV,WAAW,CAAC,UAACW,EAAD,EAAQ;AACtC,WAAOL,YAAY,CAACM,QAAb,CAAsBD,EAAtB,CAAP;AACH,GAFgC,EAE9B,CAACL,YAAD,CAF8B,CAAjC;AAIA,MAAMO,iBAAiB,GAAGb,WAAW,CAAC,UAACW,EAAD,EAAQ;AAC1C,QAAIG,IAAI,GAAGR,YAAX;AACA,QAAIQ,IAAI,CAACF,QAAL,CAAcD,EAAd,CAAJ,EAAuBG,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAY,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKL,EAAV;AAAA,KAAb,CAAP,CAAvB,KACKG,IAAI,CAACG,IAAL,CAAUN,EAAV;AAELJ,IAAAA,eAAe,oBAAKO,IAAL,EAAf;AACH,GANoC,EAMlC,CAACR,YAAD,CANkC,CAArC;;AAQA,MAAMY,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMT,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,GAAf;;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,eAAe,EAAE,SAAlB;AAA6BC,MAAAA,OAAO,EAAE;AAAtC,KAAZ;AAAA,2BAEI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAsDH,CAvED;;GAAMlB,K;;KAAAA,K;AAwEN,eAAeA,KAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\n// import {\r\n//     Tag,\r\n// } from 'Components/UI';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\nconst UiKit = (props) => {\r\n    const [selectedTags, setSelectedTags] = useState(['some-tag-2']);\r\n    const [loadingIcon, setLoadingIcon] = useState(false);\r\n\r\n    const isSelectedTag = useCallback((id) => {\r\n        return selectedTags.includes(id)\r\n    }, [selectedTags]);\r\n\r\n    const changeSelectedTag = useCallback((id) => {\r\n        let tags = selectedTags;\r\n        if (tags.includes(id)) tags = tags.filter(e => e !== id);\r\n        else tags.push(id);\r\n\r\n        setSelectedTags([...tags])\r\n    }, [selectedTags]);\r\n\r\n    const change = () => setLoadingIcon(!loadingIcon)\r\n    return (\r\n        <div style={{backgroundColor: '#153F8F', padding: '40px'}}>\r\n\r\n            <div style={{display: 'flex', alignItems: 'center'}}>\r\n                AAA\r\n                {/*<Tag*/}\r\n                {/*    id={'some-tag'}*/}\r\n                {/*    text=\"Escort some tag\"*/}\r\n                {/*    margin={[10, 10, 30, 0]}*/}\r\n                {/*    width={300}*/}\r\n                {/*    toggle={(id) => changeSelectedTag(id)}*/}\r\n                {/*    selected={isSelectedTag('some-tag')}*/}\r\n                {/*    withX={true}*/}\r\n                {/*    count={100}*/}\r\n                {/*    size={'md'}*/}\r\n                {/*/>*/}\r\n                {/*<Tag*/}\r\n                {/*    size={'md'}*/}\r\n                {/*    id={'some-tag-2'}*/}\r\n                {/*    text=\"Escort some tag 2\"*/}\r\n                {/*    margin={[10, 10, 30]}*/}\r\n                {/*    toggle={(id) => changeSelectedTag(id)}*/}\r\n                {/*    // width={300}*/}\r\n                {/*    selected={isSelectedTag('some-tag-2')}*/}\r\n                {/*    // withX={true}*/}\r\n                {/*    count={10}*/}\r\n                {/*/>*/}\r\n                {/*<Tag*/}\r\n                {/*    size={'md'}*/}\r\n                {/*    id={'some-tag-3'}*/}\r\n                {/*    text=\"Escort some tag 3\"*/}\r\n                {/*    margin={[10, 10, 30]}*/}\r\n                {/*    toggle={(id) => changeSelectedTag(id)}*/}\r\n                {/*    width={300}*/}\r\n                {/*    selected={isSelectedTag('some-tag-3')}*/}\r\n                {/*    // withX={true}*/}\r\n                {/*    // count={10}*/}\r\n                {/*/>*/}\r\n                {/*<Tag*/}\r\n                {/*    disabled={true}*/}\r\n                {/*    size={'md'}*/}\r\n                {/*    id={'some-tag-4'}*/}\r\n                {/*    text=\"Disabled\"*/}\r\n                {/*    margin={[10, 10, 30]}*/}\r\n                {/*    toggle={(id) => changeSelectedTag(id)}*/}\r\n                {/*    selected={isSelectedTag('some-tag-4')}*/}\r\n                {/*    // withX={true}*/}\r\n                {/*    // count={10}*/}\r\n                {/*/>*/}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default UiKit;"]},"metadata":{},"sourceType":"module"}